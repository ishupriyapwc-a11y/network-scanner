#!/usr/bin/env python3 """ Python Network Scanner
 Writer: Ishu Priya
 GitHub: https://github.com/your-username/network-scanner
 Description: An easy-to-use network port scanner for cybersecurity education that runs on Python.
     looks for open ports on a target host and shows the findings.
 """

 import datetime import socket import sys

 # --------------------------------#  ----------------------------------- Banner #
 def banner():
     Print("\n" + "#" * 50)
     print(" üöÄ Basic Python Network Scanner")
     print("#" * 50 + "\n")

 # --------------------------------#  # ----------------------------------- Scan function
 def scan_host(target, start_port=1, end_port=1024):
     print(f"Scanning target: {target}")
     print(f"Time started : {datetime.datetime.now()} ")

     Try this: for port in range(start_port, end_port + 1):
             S stands for socket. socket(socket.AF_INET, socket.SOCK_STREAM) socket. setdefaulttimeout (0.5)
s.connect_ex((target, port)) = result
             if result == 0:
                 print(f"Port {port}: OPEN")
             Except for Keyboard, s.close() Interrupt: print("The user interrupted the scan.")
         Except socket, sys.exit(). gaierror: print("‚ùå Hostname could not be resolved.")
         except socket in sys.exit(). error: print("‚ùå Could not connect to server.") sys.exit() 

 # --------------------------------#  ---------------------------------main #
 if "__main__" == __name__:
     banner() target = input("Enter the host to scan (such as scanme.nmap.org or 127.0.0.1): ")
     start_port = input("Enter start port [default=1]: ")  or 1 end_port = input("Enter end port [default=1024]: ")  or 1024

     try: scan_host(target, int(start_port), int(end_port)) except ValueError: print("‚ùå Invalid port range.")
